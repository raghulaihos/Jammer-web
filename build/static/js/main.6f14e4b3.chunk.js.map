{"version":3,"sources":["components/UI/Input/Input.module.css","components/UI/Button/Button.module.css","assets/logo.jpg","assets/sound.png","assets/jamroom1.jpg","assets/jamroom2.jpg","assets/jamroom3.jpg","assets/jamroom4.jpg","assets/enter-sandman.mp4","components/Logo/Logo.js","components/Navigation/dropDown/DropDown.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","hoc/layout/Layout.js","components/Video/Video.js","components/Jamcards/Jamcard/Jamcard.js","components/Jamcards/Jamcards.js","hoc/axios/axios-jamcards.js","containers/Home/Home.js","components/Jampads/Jampads.js","components/UI/Input/input.js","components/UI/Button/Button.js","containers/Auth/Auth.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","logo","className","to","src","jamBookerLogo","alt","dropDown","state","drop","dropClickHandler","setState","prev","console","log","this","props","links","Fragment","onClick","map","item","value","key","name","React","Component","navigationItems","toolbar","scroll","Logo","layout","event","inputIdentifier","target","window","location","href","handleScroll","Yoffset","pageYOffset","addEventListener","removeEventListener","click","children","video","videoTag","createRef","isMuted","sound","autoPlay","muted","loop","ref","jamcard","cards","card","pic","price","jamcards","instance","axios","create","baseURL","jam_room_pics","jamroom1","jamroom2","jamroom3","jamroom4","home","jampads","soundClickHandler","current","get","then","res","jam_cards","data","push","id","catch","e","vidSrc","soundSrc","input","inputElement","inputClasses","classes","InputElement","validationError","invalid","shouldValidate","touched","Invalid","elementType","onChange","changed","join","elementConfig","options","option","displayValue","Input","button","clicked","disabled","Button","btnType","Auth","controls","type","placeholder","validation","required","valid","email","isEmail","password","minLength","formIsValid","checkValidity","rules","isValid","trim","length","maxLength","test","inputChangedHandler","controlName","updatedControls","formSubmitHandler","preventDefault","user","put","history","replace","formElementsArray","config","form","formElement","onSubmit","App","Layout","path","exact","component","Home","Jampads","Boolean","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f14e4b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2jLrh\",\"Label\":\"Input_Label__2VHlP\",\"InputElement\":\"Input_InputElement__-ID3I\",\"Invalid\":\"Input_Invalid__2HokP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__38UD8\",\"Success\":\"Button_Success__BuRn2\",\"Danger\":\"Button_Danger__3sRFy\"};","module.exports = __webpack_public_path__ + \"static/media/logo.cb71e953.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sound.11ef9264.png\";","module.exports = __webpack_public_path__ + \"static/media/jamroom1.6984cb0e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jamroom2.6e143cda.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jamroom3.279303f0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jamroom4.092582dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/enter-sandman.be6b9a35.mp4\";","import React from 'react';\r\nimport jamBookerLogo from '../../assets/logo.jpg';\r\nimport './logo.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst logo = () => (\r\n    <div className='logo-wrapper'>\r\n    <NavLink className='logo' to='/'>\r\n          <img src={jamBookerLogo} alt=\"MyBurger\"/>\r\n    </NavLink>\r\n    <NavLink className='logo-text' to='/'>\r\n    Jammer \\m/\r\n    </NavLink>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './DropDown.css';\r\n\r\nclass dropDown extends React.Component {\r\n\r\n  state = {\r\n    drop: false\r\n  }\r\n\r\n  dropClickHandler = () => {\r\n    this.setState(prev => {\r\n      return { drop: !prev.drop };\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.links);\r\n  }\r\n  render() {\r\n    // return <select onChange={this.props.click} className=\"navDrop\" value='Browse'>\r\n    //   {\r\n    //     this.props.links.map(item=>{\r\n    //       return <option  key={item.name} value={item.value}>{item.name}<NavLink to={item.value}></NavLink></option>\r\n    //     })\r\n    //     }\r\n    // </select>\r\n\r\n    return <React.Fragment>\r\n      {/* <div className='tag'><li onClick={this.dropClickHandler} id='tag'>Browse</li> */}\r\n      <div className='dropWrap' onClick={this.dropClickHandler}>\r\n      <span className='dropBrowse'>Browse</span>\r\n      <ul className='navDrop'>\r\n        {this.props.links.map(item => {\r\n          return <NavLink to={item.value} key={item.name}><li className={this.state.drop ? 'drop' : 'dontDrop'} >{item.name}</li></NavLink>\r\n        })}\r\n      </ul>\r\n      </div>\r\n      {/* </div> */}\r\n    </React.Fragment>\r\n\r\n  }\r\n}\r\n\r\nexport default dropDown;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './NavigationItems.css'\r\nimport DropDown from '../dropDown/DropDown';\r\n\r\nconst navigationItems = (props) => {\r\n\r\n\r\n    return (<React.Fragment>\r\n        <ul className='NavItems'>\r\n            <li><NavLink to='/'>Home</NavLink></li>\r\n            <li><NavLink to='/jam-pads'>Jam pads</NavLink></li>\r\n            <li><NavLink to='/auth'>Authentication</NavLink></li>\r\n        </ul>\r\n         <DropDown {...props}/> \r\n    </React.Fragment>);\r\n};\r\nexport default navigationItems;","import React from 'react';\r\nimport './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={props.scroll?'toolbar scroll':'toolbar'}>\r\n        <Logo/>\r\n        <NavigationItems {...props}/>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React, { Component } from 'react';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\n\r\nclass layout extends Component {\r\n\r\n    state = {\r\n        links: [\r\n            { name: 'Home', value: '/' },\r\n            { name: 'Jampads', value: '/jam-pads' },\r\n            { name: 'Bookings', value: '/bookings' }\r\n        ],\r\n        scroll: false\r\n    }\r\n\r\n    dropClickHandler = (event, inputIdentifier) => {\r\n        //this.props.history.push(url);\r\n        console.log(event.target.value);\r\n        window.location.href = event.target.value;\r\n        // this.context.history.push('/path');\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll = (event) => {\r\n        // let scrollTop = event.srcElement.body.scrollTop,\r\n        //     itemTranslate = Math.min(0, scrollTop / 3 - 60);\r\n        let Yoffset = window.pageYOffset;\r\n       \r\n        if(Yoffset>25&&this.state.scroll!==true){  \r\n            this.setState({scroll:true});\r\n        }\r\n        else if(Yoffset<25&&this.state.scroll!==false)\r\n        this.setState({scroll:false});\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Toolbar scroll={this.state.scroll} click={(event) => this.dropClickHandler(event)}\r\n                    links={this.state.links}\r\n                />\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default layout;","import React from 'react';\r\nimport 'react-html5video/dist/styles.css';\r\nimport './Video.css';\r\n\r\nconst video = (props) => {\r\n\r\n    const videoTag = React.createRef();\r\n\r\n    return (\r\n        <div className='videoWrap'>\r\n            <div className='slogan'>\r\n                <p>Jams on you,</p>\r\n                <p>The lowest price on us</p>\r\n            </div>\r\n            <div className='popular'>\r\n                <p>Popular on Jam Booker</p>\r\n            </div>\r\n            <img onClick={(event) => props.click(event, videoTag)}\r\n                className={props.isMuted ? 'sound' : 'sound muted'}\r\n                alt='sound Button'\r\n                src={props.sound} />\r\n            <video\r\n                className='video'\r\n                autoPlay\r\n                muted     \r\n                loop\r\n                src={props.src}\r\n                ref={videoTag}\r\n            />\r\n        </div>)\r\n};\r\n\r\nexport default video;","import React from 'react';\r\nimport './Jamcard.css';\r\nconst jamcard = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.cards.map(card => {\r\n                    \r\n                    return (<div key={card.location} className='jamcard'>\r\n                                <img alt ='jamroom' src={card.pic}/>\r\n                                {/* <div className='nameloc'> */} \r\n                                <span className='name'>{card.name }</span>\r\n                                <span className='location'>{card.location}</span>\r\n                                {/* </div> */}\r\n                                <span className='price'>Price range {card.price}</span>                    \r\n                            </div>);\r\n                })\r\n            }\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default jamcard;","import React from 'react';\r\nimport './Jamcards.css';\r\nimport Jamcard from './Jamcard/Jamcard';\r\n\r\n\r\nconst jamcards = (props) => {\r\n\r\n    return (\r\n        <div className='cardwrap'>\r\n            <Jamcard cards={props.cards} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default jamcards;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://jammer-server.herokuapp.com'\r\n});\r\n\r\nexport default instance;\r\n\r\n//https://jammer-server.herokuapp.com\r\n\r\n//http://localhost:3000","import React, { Component } from 'react';\r\nimport Video from '../../components/Video/Video';\r\nimport soundSrc from '../../assets/sound.png';\r\nimport JamCards from '../../components/Jamcards/Jamcards';\r\nimport './Home.css';\r\nimport axios from '../../hoc/axios/axios-jamcards';\r\nimport jamroom1 from '../../assets/jamroom1.jpg';\r\nimport jamroom2 from '../../assets/jamroom2.jpg';\r\nimport jamroom3 from '../../assets/jamroom3.jpg';\r\nimport jamroom4 from '../../assets/jamroom4.jpg';\r\nimport vidSrc from '../../assets/enter-sandman.mp4';\r\n\r\nconst jam_room_pics = [jamroom1,jamroom2,jamroom3,jamroom4];\r\n\r\nclass home extends Component {\r\n    state = {\r\n        jampads: [],\r\n        muted: false\r\n    };\r\n\r\n    soundClickHandler = (event, videoTag) => {\r\n        this.setState(prev => {\r\n            return { muted: !prev.muted };\r\n        })\r\n        videoTag.current.muted = this.state.muted;\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/jamcards')\r\n            .then(res => {\r\n                const jam_cards = [];\r\n                for(const key in res.data.jamcards){\r\n                    jam_cards.push({\r\n                        ...res.data.jamcards[key],\r\n                        pic: jam_room_pics[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                \r\n                this.setState({jampads:jam_cards});\r\n            }).catch(e=>console.log('error!!!',e));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='home'>\r\n                <Video isMuted={this.state.muted} click={this.soundClickHandler} src={vidSrc} sound={soundSrc} />\r\n                <JamCards cards={this.state.jampads} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default home;","import React from 'react';\r\n\r\nconst jampads = () => {\r\n    return <div>heylo!</div>\r\n};\r\n\r\nexport default jampads;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n    let validationError = null;\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n        validationError = <p>Please enter a valid value!</p>;\r\n    }\r\n    switch (props.elementType) {\r\n        case 'input':\r\n            inputElement = <input onChange={props.changed} className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} />\r\n            break;\r\n        case 'textarea':\r\n            inputElement = <textarea onChange={props.changed} className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} />;\r\n            break;\r\n        case 'select':\r\n            inputElement = (\r\n                <select onChange={props.changed} className={inputClasses.join(' ')} value={props.value} >\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}> {option.displayValue}</option>\r\n                    ))}\r\n                </select>)\r\n                ;\r\n            break;\r\n        default:\r\n            inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} />;\r\n    }\r\n    return (\r\n        <div className={classes.Input}>\r\n            {/* <label className={classes.label}>{props.label}</label> */}\r\n            {inputElement}\r\n            {validationError}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default input;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n\r\n    <button onClick={props.clicked} disabled={props.disabled} className={[classes.Button, classes[props.btnType]].join(' ')}>\r\n        {props.children}\r\n    </button>\r\n\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport Input from '../../components/UI/Input/input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport './Auth.css';\r\nimport axios from '../../hoc/axios/axios-jamcards';\r\n\r\nclass Auth extends React.Component {\r\n    state = {\r\n        controls: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        formIsValid: false,\r\n    }\r\n\r\n\r\n\r\n    checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        }\r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedControls) {\r\n            formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({ controls: updatedControls, formIsValid: formIsValid })\r\n    }\r\n\r\n    formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        let user = {\r\n            name:  this.state.controls.name.value,\r\n            email:  this.state.controls.email.value,\r\n            password:  this.state.controls.password.value\r\n        }\r\n        console.log('calling signup');\r\n        axios.put('/auth/signup', user).then(res => {\r\n            this.props.history.replace('/');\r\n        }).catch(e => console.log('Sign up failed!'));\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.controls) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n        const form = formElementsArray.map(formElement => (\r\n            <Input\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n            />\r\n        ))\r\n        return (\r\n            <div className='Auth'>\r\n                <form onSubmit={this.formSubmitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\" disabled={!this.state.formIsValid}>SUBMIT</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auth;","import React, {Component} from 'react';\nimport './App.css';\nimport Layout from './hoc/layout/Layout';\nimport {Route} from 'react-router-dom';\nimport Home from './containers/Home/Home';\nimport Jampads from './components/Jampads/Jampads';\nimport Auth from './containers/Auth/Auth';\n\nclass App extends Component{\n  render(){\n  return (\n    <div >\n    <Layout >\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/auth\" exact component={Auth} />\n      <Route path=\"/jam-pads\" component={Jampads} />\n    </Layout>\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}